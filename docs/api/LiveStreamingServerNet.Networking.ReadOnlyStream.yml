### YamlMime:ManagedReference
items:
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream
  commentId: T:LiveStreamingServerNet.Networking.ReadOnlyStream
  id: ReadOnlyStream
  parent: LiveStreamingServerNet.Networking
  children:
  - LiveStreamingServerNet.Networking.ReadOnlyStream.#ctor(System.IO.Stream)
  - LiveStreamingServerNet.Networking.ReadOnlyStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - LiveStreamingServerNet.Networking.ReadOnlyStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - LiveStreamingServerNet.Networking.ReadOnlyStream.CanRead
  - LiveStreamingServerNet.Networking.ReadOnlyStream.CanSeek
  - LiveStreamingServerNet.Networking.ReadOnlyStream.CanTimeout
  - LiveStreamingServerNet.Networking.ReadOnlyStream.CanWrite
  - LiveStreamingServerNet.Networking.ReadOnlyStream.Close
  - LiveStreamingServerNet.Networking.ReadOnlyStream.CopyTo(System.IO.Stream,System.Int32)
  - LiveStreamingServerNet.Networking.ReadOnlyStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  - LiveStreamingServerNet.Networking.ReadOnlyStream.Dispose(System.Boolean)
  - LiveStreamingServerNet.Networking.ReadOnlyStream.DisposeAsync
  - LiveStreamingServerNet.Networking.ReadOnlyStream.EndRead(System.IAsyncResult)
  - LiveStreamingServerNet.Networking.ReadOnlyStream.EndWrite(System.IAsyncResult)
  - LiveStreamingServerNet.Networking.ReadOnlyStream.Flush
  - LiveStreamingServerNet.Networking.ReadOnlyStream.FlushAsync(System.Threading.CancellationToken)
  - LiveStreamingServerNet.Networking.ReadOnlyStream.Length
  - LiveStreamingServerNet.Networking.ReadOnlyStream.Position
  - LiveStreamingServerNet.Networking.ReadOnlyStream.Read(System.Byte[],System.Int32,System.Int32)
  - LiveStreamingServerNet.Networking.ReadOnlyStream.Read(System.Span{System.Byte})
  - LiveStreamingServerNet.Networking.ReadOnlyStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - LiveStreamingServerNet.Networking.ReadOnlyStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  - LiveStreamingServerNet.Networking.ReadOnlyStream.ReadByte
  - LiveStreamingServerNet.Networking.ReadOnlyStream.ReadTimeout
  - LiveStreamingServerNet.Networking.ReadOnlyStream.Seek(System.Int64,System.IO.SeekOrigin)
  - LiveStreamingServerNet.Networking.ReadOnlyStream.SetLength(System.Int64)
  - LiveStreamingServerNet.Networking.ReadOnlyStream.ToString
  - LiveStreamingServerNet.Networking.ReadOnlyStream.Write(System.Byte[],System.Int32,System.Int32)
  - LiveStreamingServerNet.Networking.ReadOnlyStream.Write(System.ReadOnlySpan{System.Byte})
  - LiveStreamingServerNet.Networking.ReadOnlyStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - LiveStreamingServerNet.Networking.ReadOnlyStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  - LiveStreamingServerNet.Networking.ReadOnlyStream.WriteByte(System.Byte)
  - LiveStreamingServerNet.Networking.ReadOnlyStream.WriteTimeout
  langs:
  - csharp
  - vb
  name: ReadOnlyStream
  nameWithType: ReadOnlyStream
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream
  type: Class
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: ReadOnlyStream
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 2
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  syntax:
    content: 'public sealed class ReadOnlyStream : Stream, IAsyncDisposable, IDisposable'
    content.vb: Public NotInheritable Class ReadOnlyStream Inherits Stream Implements IAsyncDisposable, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.IO.Stream
  implements:
  - System.IAsyncDisposable
  - System.IDisposable
  inheritedMembers:
  - System.IO.Stream.Null
  - System.IO.Stream.CopyTo(System.IO.Stream)
  - System.IO.Stream.CopyToAsync(System.IO.Stream)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)
  - System.IO.Stream.Dispose
  - System.IO.Stream.FlushAsync
  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.ReadAtLeast(System.Span{System.Byte},System.Int32,System.Boolean)
  - System.IO.Stream.ReadAtLeastAsync(System.Memory{System.Byte},System.Int32,System.Boolean,System.Threading.CancellationToken)
  - System.IO.Stream.ReadExactly(System.Byte[],System.Int32,System.Int32)
  - System.IO.Stream.ReadExactly(System.Span{System.Byte})
  - System.IO.Stream.ReadExactlyAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.Stream.ReadExactlyAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  - System.IO.Stream.Synchronized(System.IO.Stream)
  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.LiveStreamingServerNet.Utilities.Extensions.LockExtensions.Lock(System.Action)
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.#ctor(System.IO.Stream)
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: ReadOnlyStream(Stream)
  nameWithType: ReadOnlyStream.ReadOnlyStream(Stream)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadOnlyStream(System.IO.Stream)
  type: Constructor
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: .ctor
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 6
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  syntax:
    content: public ReadOnlyStream(Stream innerStream)
    parameters:
    - id: innerStream
      type: System.IO.Stream
    content.vb: Public Sub New(innerStream As Stream)
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.#ctor*
  nameWithType.vb: ReadOnlyStream.New(Stream)
  fullName.vb: LiveStreamingServerNet.Networking.ReadOnlyStream.New(System.IO.Stream)
  name.vb: New(Stream)
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.CanWrite
  commentId: P:LiveStreamingServerNet.Networking.ReadOnlyStream.CanWrite
  id: CanWrite
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: CanWrite
  nameWithType: ReadOnlyStream.CanWrite
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.CanWrite
  type: Property
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: CanWrite
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 11
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: When overridden in a derived class, gets a value indicating whether the current stream supports writing.
  example: []
  syntax:
    content: public override bool CanWrite { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the stream supports writing; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides ReadOnly Property CanWrite As Boolean
  overridden: System.IO.Stream.CanWrite
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.CanWrite*
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.CanRead
  commentId: P:LiveStreamingServerNet.Networking.ReadOnlyStream.CanRead
  id: CanRead
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: CanRead
  nameWithType: ReadOnlyStream.CanRead
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.CanRead
  type: Property
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: CanRead
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 12
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: When overridden in a derived class, gets a value indicating whether the current stream supports reading.
  example: []
  syntax:
    content: public override bool CanRead { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the stream supports reading; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides ReadOnly Property CanRead As Boolean
  overridden: System.IO.Stream.CanRead
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.CanRead*
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.CanSeek
  commentId: P:LiveStreamingServerNet.Networking.ReadOnlyStream.CanSeek
  id: CanSeek
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: CanSeek
  nameWithType: ReadOnlyStream.CanSeek
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.CanSeek
  type: Property
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: CanSeek
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 13
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: When overridden in a derived class, gets a value indicating whether the current stream supports seeking.
  example: []
  syntax:
    content: public override bool CanSeek { get; }
    parameters: []
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the stream supports seeking; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides ReadOnly Property CanSeek As Boolean
  overridden: System.IO.Stream.CanSeek
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.CanSeek*
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.CanTimeout
  commentId: P:LiveStreamingServerNet.Networking.ReadOnlyStream.CanTimeout
  id: CanTimeout
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: CanTimeout
  nameWithType: ReadOnlyStream.CanTimeout
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.CanTimeout
  type: Property
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: CanTimeout
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 14
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Gets a value that determines whether the current stream can time out.
  example: []
  syntax:
    content: public override bool CanTimeout { get; }
    parameters: []
    return:
      type: System.Boolean
      description: A value that determines whether the current stream can time out.
    content.vb: Public Overrides ReadOnly Property CanTimeout As Boolean
  overridden: System.IO.Stream.CanTimeout
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.CanTimeout*
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.Length
  commentId: P:LiveStreamingServerNet.Networking.ReadOnlyStream.Length
  id: Length
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: ReadOnlyStream.Length
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.Length
  type: Property
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: Length
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 15
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: When overridden in a derived class, gets the length in bytes of the stream.
  example: []
  syntax:
    content: public override long Length { get; }
    parameters: []
    return:
      type: System.Int64
      description: A long value representing the length of the stream in bytes.
    content.vb: Public Overrides ReadOnly Property Length As Long
  overridden: System.IO.Stream.Length
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: A class derived from <code>Stream</code> does not support seeking and the length is unknown.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Methods were called after the stream was closed.
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.Position
  commentId: P:LiveStreamingServerNet.Networking.ReadOnlyStream.Position
  id: Position
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: ReadOnlyStream.Position
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.Position
  type: Property
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: Position
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 16
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: When overridden in a derived class, gets or sets the position within the current stream.
  example: []
  syntax:
    content: public override long Position { get; set; }
    parameters: []
    return:
      type: System.Int64
      description: The current position within the stream.
    content.vb: Public Overrides Property Position As Long
  overridden: System.IO.Stream.Position
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.Position*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The stream does not support seeking.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Methods were called after the stream was closed.
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadTimeout
  commentId: P:LiveStreamingServerNet.Networking.ReadOnlyStream.ReadTimeout
  id: ReadTimeout
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: ReadTimeout
  nameWithType: ReadOnlyStream.ReadTimeout
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadTimeout
  type: Property
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: ReadTimeout
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 17
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Gets or sets a value, in milliseconds, that determines how long the stream will attempt to read before timing out.
  example: []
  syntax:
    content: public override int ReadTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: A value, in milliseconds, that determines how long the stream will attempt to read before timing out.
    content.vb: Public Overrides Property ReadTimeout As Integer
  overridden: System.IO.Stream.ReadTimeout
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadTimeout*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.IO.Stream.ReadTimeout" data-throw-if-not-resolved="false"></xref> method always throws an <xref href="System.InvalidOperationException" data-throw-if-not-resolved="false"></xref>.
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteTimeout
  commentId: P:LiveStreamingServerNet.Networking.ReadOnlyStream.WriteTimeout
  id: WriteTimeout
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: WriteTimeout
  nameWithType: ReadOnlyStream.WriteTimeout
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteTimeout
  type: Property
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: WriteTimeout
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 18
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Gets or sets a value, in milliseconds, that determines how long the stream will attempt to write before timing out.
  example: []
  syntax:
    content: public override int WriteTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: A value, in milliseconds, that determines how long the stream will attempt to write before timing out.
    content.vb: Public Overrides Property WriteTimeout As Integer
  overridden: System.IO.Stream.WriteTimeout
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteTimeout*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The <xref href="System.IO.Stream.WriteTimeout" data-throw-if-not-resolved="false"></xref> method always throws an <xref href="System.InvalidOperationException" data-throw-if-not-resolved="false"></xref>.
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: BeginRead(byte[], int, int, AsyncCallback?, object?)
  nameWithType: ReadOnlyStream.BeginRead(byte[], int, int, AsyncCallback?, object?)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.BeginRead(byte[], int, int, System.AsyncCallback?, object?)
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: BeginRead
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 20
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Begins an asynchronous read operation. (Consider using <xref href="System.IO.Stream.ReadAsync(System.Byte%5b%5d%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref> instead.)
  example: []
  syntax:
    content: public override IAsyncResult BeginRead(byte[] buffer, int offset, int count, AsyncCallback? callback, object? state)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer to read the data into.
    - id: offset
      type: System.Int32
      description: The byte offset in <code class="paramref">buffer</code> at which to begin writing data read from the stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to read.
    - id: callback
      type: System.AsyncCallback
      description: An optional asynchronous callback, to be called when the read is complete.
    - id: state
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous read request from other requests.
    return:
      type: System.IAsyncResult
      description: An <xref href="System.IAsyncResult" data-throw-if-not-resolved="false"></xref> that represents the asynchronous read, which could still be pending.
    content.vb: Public Overrides Function BeginRead(buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult
  overridden: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.BeginRead*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: Attempted an asynchronous read past the end of the stream, or a disk error occurs.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: One or more of the arguments is invalid.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Methods were called after the stream was closed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The current <code>Stream</code> implementation does not support the read operation.
  nameWithType.vb: ReadOnlyStream.BeginRead(Byte(), Integer, Integer, AsyncCallback, Object)
  fullName.vb: LiveStreamingServerNet.Networking.ReadOnlyStream.BeginRead(Byte(), Integer, Integer, System.AsyncCallback, Object)
  name.vb: BeginRead(Byte(), Integer, Integer, AsyncCallback, Object)
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: BeginWrite(byte[], int, int, AsyncCallback?, object?)
  nameWithType: ReadOnlyStream.BeginWrite(byte[], int, int, AsyncCallback?, object?)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.BeginWrite(byte[], int, int, System.AsyncCallback?, object?)
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: BeginWrite
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 25
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Begins an asynchronous write operation. (Consider using <xref href="System.IO.Stream.WriteAsync(System.Byte%5b%5d%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref> instead.)
  example: []
  syntax:
    content: public override IAsyncResult BeginWrite(byte[] buffer, int offset, int count, AsyncCallback? callback, object? state)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer to write data from.
    - id: offset
      type: System.Int32
      description: The byte offset in <code class="paramref">buffer</code> from which to begin writing.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to write.
    - id: callback
      type: System.AsyncCallback
      description: An optional asynchronous callback, to be called when the write is complete.
    - id: state
      type: System.Object
      description: A user-provided object that distinguishes this particular asynchronous write request from other requests.
    return:
      type: System.IAsyncResult
      description: An <code>IAsyncResult</code> that represents the asynchronous write, which could still be pending.
    content.vb: Public Overrides Function BeginWrite(buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult
  overridden: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.BeginWrite*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: Attempted an asynchronous write past the end of the stream, or a disk error occurs.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: One or more of the arguments is invalid.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Methods were called after the stream was closed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The current <code>Stream</code> implementation does not support the write operation.
  nameWithType.vb: ReadOnlyStream.BeginWrite(Byte(), Integer, Integer, AsyncCallback, Object)
  fullName.vb: LiveStreamingServerNet.Networking.ReadOnlyStream.BeginWrite(Byte(), Integer, Integer, System.AsyncCallback, Object)
  name.vb: BeginWrite(Byte(), Integer, Integer, AsyncCallback, Object)
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.Close
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.Close
  id: Close
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: ReadOnlyStream.Close()
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.Close()
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: Close
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 30
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream. Instead of calling this method, ensure that the stream is properly disposed.
  example: []
  syntax:
    content: public override void Close()
    content.vb: Public Overrides Sub Close()
  overridden: System.IO.Stream.Close
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.Close*
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.CopyTo(System.IO.Stream,System.Int32)
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.CopyTo(System.IO.Stream,System.Int32)
  id: CopyTo(System.IO.Stream,System.Int32)
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: CopyTo(Stream, int)
  nameWithType: ReadOnlyStream.CopyTo(Stream, int)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.CopyTo(System.IO.Stream, int)
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: CopyTo
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 35
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Reads the bytes from the current stream and writes them to another stream, using a specified buffer size. Both streams positions are advanced by the number of bytes copied.
  example: []
  syntax:
    content: public override void CopyTo(Stream destination, int bufferSize)
    parameters:
    - id: destination
      type: System.IO.Stream
      description: The stream to which the contents of the current stream will be copied.
    - id: bufferSize
      type: System.Int32
      description: The size of the buffer. This value must be greater than zero. The default size is 81920.
    content.vb: Public Overrides Sub CopyTo(destination As Stream, bufferSize As Integer)
  overridden: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">destination</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">bufferSize</code> is negative or zero.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: >-
      The current stream does not support reading.  

       -or-  

       <code class="paramref">destination</code> does not support writing.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Either the current stream or <code class="paramref">destination</code> were closed before the <xref href="System.IO.Stream.CopyTo(System.IO.Stream)" data-throw-if-not-resolved="false"></xref> method was called.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurred.
  nameWithType.vb: ReadOnlyStream.CopyTo(Stream, Integer)
  fullName.vb: LiveStreamingServerNet.Networking.ReadOnlyStream.CopyTo(System.IO.Stream, Integer)
  name.vb: CopyTo(Stream, Integer)
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  id: CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: CopyToAsync(Stream, int, CancellationToken)
  nameWithType: ReadOnlyStream.CopyToAsync(Stream, int, CancellationToken)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.CopyToAsync(System.IO.Stream, int, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: CopyToAsync
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 40
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Asynchronously reads the bytes from the current stream and writes them to another stream, using a specified buffer size and cancellation token. Both streams positions are advanced by the number of bytes copied.
  example: []
  syntax:
    content: public override Task CopyToAsync(Stream destination, int bufferSize, CancellationToken cancellationToken)
    parameters:
    - id: destination
      type: System.IO.Stream
      description: The stream to which the contents of the current stream will be copied.
    - id: bufferSize
      type: System.Int32
      description: The size, in bytes, of the buffer. This value must be greater than zero. The default size is 81920.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests. The default value is <xref href="System.Threading.CancellationToken.None" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous copy operation.
    content.vb: Public Overrides Function CopyToAsync(destination As Stream, bufferSize As Integer, cancellationToken As CancellationToken) As Task
  overridden: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.CopyToAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">destination</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">buffersize</code> is negative or zero.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Either the current stream or the destination stream is disposed.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The current stream does not support reading, or the destination stream does not support writing.
  nameWithType.vb: ReadOnlyStream.CopyToAsync(Stream, Integer, CancellationToken)
  fullName.vb: LiveStreamingServerNet.Networking.ReadOnlyStream.CopyToAsync(System.IO.Stream, Integer, System.Threading.CancellationToken)
  name.vb: CopyToAsync(Stream, Integer, CancellationToken)
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.DisposeAsync
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.DisposeAsync
  id: DisposeAsync
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: DisposeAsync()
  nameWithType: ReadOnlyStream.DisposeAsync()
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.DisposeAsync()
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: DisposeAsync
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 45
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Asynchronously releases the unmanaged resources used by the <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override ValueTask DisposeAsync()
    return:
      type: System.Threading.Tasks.ValueTask
      description: A task that represents the asynchronous dispose operation.
    content.vb: Public Overrides Function DisposeAsync() As ValueTask
  overridden: System.IO.Stream.DisposeAsync
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.DisposeAsync*
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.EndRead(System.IAsyncResult)
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: EndRead(IAsyncResult)
  nameWithType: ReadOnlyStream.EndRead(IAsyncResult)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.EndRead(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: EndRead
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 50
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Waits for the pending asynchronous read to complete. (Consider using <xref href="System.IO.Stream.ReadAsync(System.Byte%5b%5d%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref> instead.)
  example: []
  syntax:
    content: public override int EndRead(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: The reference to the pending asynchronous request to finish.
    return:
      type: System.Int32
      description: The number of bytes read from the stream, between zero (0) and the number of bytes requested. ReadAsync returns zero (0) only if zero bytes were requested or if no more bytes will be available because it's at the end of the stream; otherwise, read operations do not complete until at least one byte is available. If zero bytes are requested, read operations may complete immediately or may not complete until at least one byte is available (but without consuming any data).
    content.vb: Public Overrides Function EndRead(asyncResult As IAsyncResult) As Integer
  overridden: System.IO.Stream.EndRead(System.IAsyncResult)
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">asyncResult</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      A handle to the pending read operation is not available.  

       -or-  

       The pending operation does not support reading.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code class="paramref">asyncResult</code> did not originate from a <xref href="System.IO.Stream.BeginRead(System.Byte%5b%5d%2cSystem.Int32%2cSystem.Int32%2cSystem.AsyncCallback%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> method on the current stream.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The stream is closed or an internal error has occurred.
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.EndWrite(System.IAsyncResult)
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: EndWrite(IAsyncResult)
  nameWithType: ReadOnlyStream.EndWrite(IAsyncResult)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.EndWrite(System.IAsyncResult)
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: EndWrite
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 55
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Ends an asynchronous write operation. (Consider using <xref href="System.IO.Stream.WriteAsync(System.Byte%5b%5d%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref> instead.)
  example: []
  syntax:
    content: public override void EndWrite(IAsyncResult asyncResult)
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: A reference to the outstanding asynchronous I/O request.
    content.vb: Public Overrides Sub EndWrite(asyncResult As IAsyncResult)
  overridden: System.IO.Stream.EndWrite(System.IAsyncResult)
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">asyncResult</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      A handle to the pending write operation is not available.  

       -or-  

       The pending operation does not support writing.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code class="paramref">asyncResult</code> did not originate from a <xref href="System.IO.Stream.BeginWrite(System.Byte%5b%5d%2cSystem.Int32%2cSystem.Int32%2cSystem.AsyncCallback%2cSystem.Object)" data-throw-if-not-resolved="false"></xref> method on the current stream.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: The stream is closed or an internal error has occurred.
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.Flush
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.Flush
  id: Flush
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: ReadOnlyStream.Flush()
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.Flush()
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: Flush
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 60
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.
  example: []
  syntax:
    content: public override void Flush()
    content.vb: Public Overrides Sub Flush()
  overridden: System.IO.Stream.Flush
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.Flush*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.FlushAsync(System.Threading.CancellationToken)
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.FlushAsync(System.Threading.CancellationToken)
  id: FlushAsync(System.Threading.CancellationToken)
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: FlushAsync(CancellationToken)
  nameWithType: ReadOnlyStream.FlushAsync(CancellationToken)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.FlushAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: FlushAsync
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 65
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.
  example: []
  syntax:
    content: public override Task FlushAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests. The default value is <xref href="System.Threading.CancellationToken.None" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous flush operation.
    content.vb: Public Overrides Function FlushAsync(cancellationToken As CancellationToken) As Task
  overridden: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.FlushAsync*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream has been disposed.
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: Read(byte[], int, int)
  nameWithType: ReadOnlyStream.Read(byte[], int, int)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.Read(byte[], int, int)
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: Read
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 70
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
  example: []
  syntax:
    content: public override int Read(byte[] buffer, int offset, int count)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <code class="paramref">offset</code> and (<code class="paramref">offset</code> + <code class="paramref">count</code> - 1) replaced by the bytes read from the current source.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in <code class="paramref">buffer</code> at which to begin storing the data read from the current stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to be read from the current stream.
    return:
      type: System.Int32
      description: The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if <code class="paramref">count</code> is 0 or the end of the stream has been reached.
    content.vb: Public Overrides Function Read(buffer As Byte(), offset As Integer, count As Integer) As Integer
  overridden: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.Read*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The sum of <code class="paramref">offset</code> and <code class="paramref">count</code> is larger than the buffer length.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">buffer</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">offset</code> or <code class="paramref">count</code> is negative.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The stream does not support reading.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Methods were called after the stream was closed.
  nameWithType.vb: ReadOnlyStream.Read(Byte(), Integer, Integer)
  fullName.vb: LiveStreamingServerNet.Networking.ReadOnlyStream.Read(Byte(), Integer, Integer)
  name.vb: Read(Byte(), Integer, Integer)
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.Read(System.Span{System.Byte})
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.Read(System.Span{System.Byte})
  id: Read(System.Span{System.Byte})
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: Read(Span<byte>)
  nameWithType: ReadOnlyStream.Read(Span<byte>)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.Read(System.Span<byte>)
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: Read
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 75
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
  example: []
  syntax:
    content: public override int Read(Span<byte> buffer)
    parameters:
    - id: buffer
      type: System.Span{System.Byte}
      description: A region of memory. When this method returns, the contents of this region are replaced by the bytes read from the current source.
    return:
      type: System.Int32
      description: The total number of bytes read into the buffer. This can be less than the size of the buffer if that many bytes are not currently available, or zero (0) if the buffer's length is zero or the end of the stream has been reached.
    content.vb: Public Overrides Function Read(buffer As Span(Of Byte)) As Integer
  overridden: System.IO.Stream.Read(System.Span{System.Byte})
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.Read*
  nameWithType.vb: ReadOnlyStream.Read(Span(Of Byte))
  fullName.vb: LiveStreamingServerNet.Networking.ReadOnlyStream.Read(System.Span(Of Byte))
  name.vb: Read(Span(Of Byte))
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: ReadAsync(byte[], int, int, CancellationToken)
  nameWithType: ReadOnlyStream.ReadAsync(byte[], int, int, CancellationToken)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadAsync(byte[], int, int, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: ReadAsync
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 80
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.
  example: []
  syntax:
    content: public override Task<int> ReadAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer to write the data into.
    - id: offset
      type: System.Int32
      description: The byte offset in <code class="paramref">buffer</code> at which to begin writing data from the stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to read.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests. The default value is <xref href="System.Threading.CancellationToken.None" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task that represents the asynchronous read operation. The value of the <code class="paramref">TResult</code> parameter contains the total number of bytes read into the buffer. The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if <code class="paramref">count</code> is 0 or if the end of the stream has been reached.
    content.vb: Public Overrides Function ReadAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task(Of Integer)
  overridden: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">buffer</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">offset</code> or <code class="paramref">count</code> is negative.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The sum of <code class="paramref">offset</code> and <code class="paramref">count</code> is larger than the buffer length.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The stream does not support reading.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream has been disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The stream is currently in use by a previous read operation.
  nameWithType.vb: ReadOnlyStream.ReadAsync(Byte(), Integer, Integer, CancellationToken)
  fullName.vb: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadAsync(Byte(), Integer, Integer, System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Integer, Integer, CancellationToken)
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  id: ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: ReadAsync(Memory<byte>, CancellationToken)
  nameWithType: ReadOnlyStream.ReadAsync(Memory<byte>, CancellationToken)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadAsync(System.Memory<byte>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: ReadAsync
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 85
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Asynchronously reads a sequence of bytes from the current stream, advances the position within the stream by the number of bytes read, and monitors cancellation requests.
  example: []
  syntax:
    content: public override ValueTask<int> ReadAsync(Memory<byte> buffer, CancellationToken cancellationToken = default)
    parameters:
    - id: buffer
      type: System.Memory{System.Byte}
      description: The region of memory to write the data into.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests. The default value is <xref href="System.Threading.CancellationToken.None" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.ValueTask{System.Int32}
      description: A task that represents the asynchronous read operation. The value of its <xref href="System.Threading.Tasks.ValueTask%601.Result" data-throw-if-not-resolved="false"></xref> property contains the total number of bytes read into the buffer. The result value can be less than the length of the buffer if that many bytes are not currently available, or it can be 0 (zero) if the length of the buffer is 0 or if the end of the stream has been reached.
    content.vb: Public Overrides Function ReadAsync(buffer As Memory(Of Byte), cancellationToken As CancellationToken = Nothing) As ValueTask(Of Integer)
  overridden: System.IO.Stream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadAsync*
  nameWithType.vb: ReadOnlyStream.ReadAsync(Memory(Of Byte), CancellationToken)
  fullName.vb: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadAsync(System.Memory(Of Byte), System.Threading.CancellationToken)
  name.vb: ReadAsync(Memory(Of Byte), CancellationToken)
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadByte
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.ReadByte
  id: ReadByte
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: ReadByte()
  nameWithType: ReadOnlyStream.ReadByte()
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadByte()
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: ReadByte
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 90
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
  example: []
  syntax:
    content: public override int ReadByte()
    return:
      type: System.Int32
      description: The unsigned byte cast to an <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>, or -1 if at the end of the stream.
    content.vb: Public Overrides Function ReadByte() As Integer
  overridden: System.IO.Stream.ReadByte
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadByte*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The stream does not support reading.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Methods were called after the stream was closed.
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.Seek(System.Int64,System.IO.SeekOrigin)
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: Seek(long, SeekOrigin)
  nameWithType: ReadOnlyStream.Seek(long, SeekOrigin)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.Seek(long, System.IO.SeekOrigin)
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: Seek
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 95
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: When overridden in a derived class, sets the position within the current stream.
  example: []
  syntax:
    content: public override long Seek(long offset, SeekOrigin origin)
    parameters:
    - id: offset
      type: System.Int64
      description: A byte offset relative to the <code class="paramref">origin</code> parameter.
    - id: origin
      type: System.IO.SeekOrigin
      description: A value of type <xref href="System.IO.SeekOrigin" data-throw-if-not-resolved="false"></xref> indicating the reference point used to obtain the new position.
    return:
      type: System.Int64
      description: The new position within the current stream.
    content.vb: Public Overrides Function Seek(offset As Long, origin As SeekOrigin) As Long
  overridden: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.Seek*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The stream does not support seeking, such as if the stream is constructed from a pipe or console output.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Methods were called after the stream was closed.
  nameWithType.vb: ReadOnlyStream.Seek(Long, SeekOrigin)
  fullName.vb: LiveStreamingServerNet.Networking.ReadOnlyStream.Seek(Long, System.IO.SeekOrigin)
  name.vb: Seek(Long, SeekOrigin)
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.SetLength(System.Int64)
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: SetLength(long)
  nameWithType: ReadOnlyStream.SetLength(long)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.SetLength(long)
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: SetLength
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 100
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: When overridden in a derived class, sets the length of the current stream.
  example: []
  syntax:
    content: public override void SetLength(long value)
    parameters:
    - id: value
      type: System.Int64
      description: The desired length of the current stream in bytes.
    content.vb: Public Overrides Sub SetLength(value As Long)
  overridden: System.IO.Stream.SetLength(System.Int64)
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.SetLength*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Methods were called after the stream was closed.
  nameWithType.vb: ReadOnlyStream.SetLength(Long)
  fullName.vb: LiveStreamingServerNet.Networking.ReadOnlyStream.SetLength(Long)
  name.vb: SetLength(Long)
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.ToString
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.ToString
  id: ToString
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ReadOnlyStream.ToString()
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.ToString()
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: ToString
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 105
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string? ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.ToString*
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: Write(byte[], int, int)
  nameWithType: ReadOnlyStream.Write(byte[], int, int)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.Write(byte[], int, int)
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: Write
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 110
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
  example: []
  syntax:
    content: public override void Write(byte[] buffer, int offset, int count)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: An array of bytes. This method copies <code class="paramref">count</code> bytes from <code class="paramref">buffer</code> to the current stream.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in <code class="paramref">buffer</code> at which to begin copying bytes to the current stream.
    - id: count
      type: System.Int32
      description: The number of bytes to be written to the current stream.
    content.vb: Public Overrides Sub Write(buffer As Byte(), offset As Integer, count As Integer)
  overridden: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.Write*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The sum of <code class="paramref">offset</code> and <code class="paramref">count</code> is greater than the buffer length.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">buffer</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">offset</code> or <code class="paramref">count</code> is negative.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurred, such as the specified file cannot be found.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The stream does not support writing.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: <xref href="System.IO.Stream.Write(System.Byte%5b%5d%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref> was called after the stream was closed.
  nameWithType.vb: ReadOnlyStream.Write(Byte(), Integer, Integer)
  fullName.vb: LiveStreamingServerNet.Networking.ReadOnlyStream.Write(Byte(), Integer, Integer)
  name.vb: Write(Byte(), Integer, Integer)
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.Write(System.ReadOnlySpan{System.Byte})
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.Write(System.ReadOnlySpan{System.Byte})
  id: Write(System.ReadOnlySpan{System.Byte})
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: Write(ReadOnlySpan<byte>)
  nameWithType: ReadOnlyStream.Write(ReadOnlySpan<byte>)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.Write(System.ReadOnlySpan<byte>)
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: Write
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 115
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
  example: []
  syntax:
    content: public override void Write(ReadOnlySpan<byte> buffer)
    parameters:
    - id: buffer
      type: System.ReadOnlySpan{System.Byte}
      description: A region of memory. This method copies the contents of this region to the current stream.
    content.vb: Public Overrides Sub Write(buffer As ReadOnlySpan(Of Byte))
  overridden: System.IO.Stream.Write(System.ReadOnlySpan{System.Byte})
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.Write*
  nameWithType.vb: ReadOnlyStream.Write(ReadOnlySpan(Of Byte))
  fullName.vb: LiveStreamingServerNet.Networking.ReadOnlyStream.Write(System.ReadOnlySpan(Of Byte))
  name.vb: Write(ReadOnlySpan(Of Byte))
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: WriteAsync(byte[], int, int, CancellationToken)
  nameWithType: ReadOnlyStream.WriteAsync(byte[], int, int, CancellationToken)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteAsync(byte[], int, int, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: WriteAsync
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 120
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.
  example: []
  syntax:
    content: public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: The buffer to write data from.
    - id: offset
      type: System.Int32
      description: The zero-based byte offset in <code class="paramref">buffer</code> from which to begin copying bytes to the stream.
    - id: count
      type: System.Int32
      description: The maximum number of bytes to write.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests. The default value is <xref href="System.Threading.CancellationToken.None" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous write operation.
    content.vb: Public Overrides Function WriteAsync(buffer As Byte(), offset As Integer, count As Integer, cancellationToken As CancellationToken) As Task
  overridden: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code class="paramref">buffer</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">offset</code> or <code class="paramref">count</code> is negative.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The sum of <code class="paramref">offset</code> and <code class="paramref">count</code> is larger than the buffer length.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The stream does not support writing.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The stream has been disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The stream is currently in use by a previous write operation.
  nameWithType.vb: ReadOnlyStream.WriteAsync(Byte(), Integer, Integer, CancellationToken)
  fullName.vb: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteAsync(Byte(), Integer, Integer, System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Integer, Integer, CancellationToken)
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  id: WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: WriteAsync(ReadOnlyMemory<byte>, CancellationToken)
  nameWithType: ReadOnlyStream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteAsync(System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: WriteAsync
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 125
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Asynchronously writes a sequence of bytes to the current stream, advances the current position within this stream by the number of bytes written, and monitors cancellation requests.
  example: []
  syntax:
    content: public override ValueTask WriteAsync(ReadOnlyMemory<byte> buffer, CancellationToken cancellationToken = default)
    parameters:
    - id: buffer
      type: System.ReadOnlyMemory{System.Byte}
      description: The region of memory to write data from.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to monitor for cancellation requests. The default value is <xref href="System.Threading.CancellationToken.None" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Threading.Tasks.ValueTask
      description: A task that represents the asynchronous write operation.
    content.vb: Public Overrides Function WriteAsync(buffer As ReadOnlyMemory(Of Byte), cancellationToken As CancellationToken = Nothing) As ValueTask
  overridden: System.IO.Stream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteAsync*
  nameWithType.vb: ReadOnlyStream.WriteAsync(ReadOnlyMemory(Of Byte), CancellationToken)
  fullName.vb: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteAsync(System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  name.vb: WriteAsync(ReadOnlyMemory(Of Byte), CancellationToken)
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteByte(System.Byte)
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: WriteByte(byte)
  nameWithType: ReadOnlyStream.WriteByte(byte)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteByte(byte)
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: WriteByte
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 130
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Writes a byte to the current position in the stream and advances the position within the stream by one byte.
  example: []
  syntax:
    content: public override void WriteByte(byte value)
    parameters:
    - id: value
      type: System.Byte
      description: The byte to write to the stream.
    content.vb: Public Overrides Sub WriteByte(value As Byte)
  overridden: System.IO.Stream.WriteByte(System.Byte)
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteByte*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The stream does not support writing, or the stream is already closed.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: Methods were called after the stream was closed.
  nameWithType.vb: ReadOnlyStream.WriteByte(Byte)
  fullName.vb: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteByte(Byte)
  name.vb: WriteByte(Byte)
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.Dispose(System.Boolean)
  commentId: M:LiveStreamingServerNet.Networking.ReadOnlyStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: LiveStreamingServerNet.Networking.ReadOnlyStream
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: ReadOnlyStream.Dispose(bool)
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.Dispose(bool)
  type: Method
  source:
    remote:
      path: src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
      branch: features/docs
      repo: https://josephnhtam@github.com/josephnhtam/live-streaming-server-net.git
    id: Dispose
    path: ../src/LiveStreamingServerNet.Networking/ReadOnlyStream.cs
    startLine: 135
  assemblies:
  - LiveStreamingServerNet.Networking
  namespace: LiveStreamingServerNet.Networking
  summary: Releases the unmanaged resources used by the <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> and optionally releases the managed resources.
  example: []
  syntax:
    content: protected override void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to release both managed and unmanaged resources; <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> to release only unmanaged resources.
    content.vb: Protected Overrides Sub Dispose(disposing As Boolean)
  overridden: System.IO.Stream.Dispose(System.Boolean)
  overload: LiveStreamingServerNet.Networking.ReadOnlyStream.Dispose*
  nameWithType.vb: ReadOnlyStream.Dispose(Boolean)
  fullName.vb: LiveStreamingServerNet.Networking.ReadOnlyStream.Dispose(Boolean)
  name.vb: Dispose(Boolean)
references:
- uid: LiveStreamingServerNet.Networking
  commentId: N:LiveStreamingServerNet.Networking
  href: LiveStreamingServerNet.html
  name: LiveStreamingServerNet.Networking
  nameWithType: LiveStreamingServerNet.Networking
  fullName: LiveStreamingServerNet.Networking
  spec.csharp:
  - uid: LiveStreamingServerNet
    name: LiveStreamingServerNet
    href: LiveStreamingServerNet.html
  - name: .
  - uid: LiveStreamingServerNet.Networking
    name: Networking
    href: LiveStreamingServerNet.Networking.html
  spec.vb:
  - uid: LiveStreamingServerNet
    name: LiveStreamingServerNet
    href: LiveStreamingServerNet.html
  - name: .
  - uid: LiveStreamingServerNet.Networking
    name: Networking
    href: LiveStreamingServerNet.Networking.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IAsyncDisposable
  commentId: T:System.IAsyncDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iasyncdisposable
  name: IAsyncDisposable
  nameWithType: IAsyncDisposable
  fullName: System.IAsyncDisposable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.IO.Stream.Null
  commentId: F:System.IO.Stream.Null
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.null
  name: "Null"
  nameWithType: Stream.Null
  fullName: System.IO.Stream.Null
- uid: System.IO.Stream.CopyTo(System.IO.Stream)
  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.copyto#system-io-stream-copyto(system-io-stream)
  name: CopyTo(Stream)
  nameWithType: Stream.CopyTo(Stream)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.copyto#system-io-stream-copyto(system-io-stream)
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
  spec.vb:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.copyto#system-io-stream-copyto(system-io-stream)
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.copytoasync#system-io-stream-copytoasync(system-io-stream)
  name: CopyToAsync(Stream)
  nameWithType: Stream.CopyToAsync(Stream)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
    name: CopyToAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.copytoasync#system-io-stream-copytoasync(system-io-stream)
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream)
    name: CopyToAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.copytoasync#system-io-stream-copytoasync(system-io-stream)
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.copytoasync#system-io-stream-copytoasync(system-io-stream-system-int32)
  name: CopyToAsync(Stream, int)
  nameWithType: Stream.CopyToAsync(Stream, int)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, int)
  nameWithType.vb: Stream.CopyToAsync(Stream, Integer)
  fullName.vb: System.IO.Stream.CopyToAsync(System.IO.Stream, Integer)
  name.vb: CopyToAsync(Stream, Integer)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
    name: CopyToAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.copytoasync#system-io-stream-copytoasync(system-io-stream-system-int32)
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)
    name: CopyToAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.copytoasync#system-io-stream-copytoasync(system-io-stream-system-int32)
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.copytoasync#system-io-stream-copytoasync(system-io-stream-system-threading-cancellationtoken)
  name: CopyToAsync(Stream, CancellationToken)
  nameWithType: Stream.CopyToAsync(Stream, CancellationToken)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)
    name: CopyToAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.copytoasync#system-io-stream-copytoasync(system-io-stream-system-threading-cancellationtoken)
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)
    name: CopyToAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.copytoasync#system-io-stream-copytoasync(system-io-stream-system-threading-cancellationtoken)
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.IO.Stream.Dispose
  commentId: M:System.IO.Stream.Dispose
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.dispose#system-io-stream-dispose
  name: Dispose()
  nameWithType: Stream.Dispose()
  fullName: System.IO.Stream.Dispose()
  spec.csharp:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.dispose#system-io-stream-dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IO.Stream.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.dispose#system-io-stream-dispose
  - name: (
  - name: )
- uid: System.IO.Stream.FlushAsync
  commentId: M:System.IO.Stream.FlushAsync
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.flushasync#system-io-stream-flushasync
  name: FlushAsync()
  nameWithType: Stream.FlushAsync()
  fullName: System.IO.Stream.FlushAsync()
  spec.csharp:
  - uid: System.IO.Stream.FlushAsync
    name: FlushAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.flushasync#system-io-stream-flushasync
  - name: (
  - name: )
  spec.vb:
  - uid: System.IO.Stream.FlushAsync
    name: FlushAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.flushasync#system-io-stream-flushasync
  - name: (
  - name: )
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.readasync#system-io-stream-readasync(system-byte()-system-int32-system-int32)
  name: ReadAsync(byte[], int, int)
  nameWithType: Stream.ReadAsync(byte[], int, int)
  fullName: System.IO.Stream.ReadAsync(byte[], int, int)
  nameWithType.vb: Stream.ReadAsync(Byte(), Integer, Integer)
  fullName.vb: System.IO.Stream.ReadAsync(Byte(), Integer, Integer)
  name.vb: ReadAsync(Byte(), Integer, Integer)
  spec.csharp:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
    name: ReadAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readasync#system-io-stream-readasync(system-byte()-system-int32-system-int32)
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)
    name: ReadAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readasync#system-io-stream-readasync(system-byte()-system-int32-system-int32)
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.IO.Stream.ReadAtLeast(System.Span{System.Byte},System.Int32,System.Boolean)
  commentId: M:System.IO.Stream.ReadAtLeast(System.Span{System.Byte},System.Int32,System.Boolean)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.readatleast
  name: ReadAtLeast(Span<byte>, int, bool)
  nameWithType: Stream.ReadAtLeast(Span<byte>, int, bool)
  fullName: System.IO.Stream.ReadAtLeast(System.Span<byte>, int, bool)
  nameWithType.vb: Stream.ReadAtLeast(Span(Of Byte), Integer, Boolean)
  fullName.vb: System.IO.Stream.ReadAtLeast(System.Span(Of Byte), Integer, Boolean)
  name.vb: ReadAtLeast(Span(Of Byte), Integer, Boolean)
  spec.csharp:
  - uid: System.IO.Stream.ReadAtLeast(System.Span{System.Byte},System.Int32,System.Boolean)
    name: ReadAtLeast
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readatleast
  - name: (
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: System.IO.Stream.ReadAtLeast(System.Span{System.Byte},System.Int32,System.Boolean)
    name: ReadAtLeast
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readatleast
  - name: (
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.IO.Stream.ReadAtLeastAsync(System.Memory{System.Byte},System.Int32,System.Boolean,System.Threading.CancellationToken)
  commentId: M:System.IO.Stream.ReadAtLeastAsync(System.Memory{System.Byte},System.Int32,System.Boolean,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.readatleastasync
  name: ReadAtLeastAsync(Memory<byte>, int, bool, CancellationToken)
  nameWithType: Stream.ReadAtLeastAsync(Memory<byte>, int, bool, CancellationToken)
  fullName: System.IO.Stream.ReadAtLeastAsync(System.Memory<byte>, int, bool, System.Threading.CancellationToken)
  nameWithType.vb: Stream.ReadAtLeastAsync(Memory(Of Byte), Integer, Boolean, CancellationToken)
  fullName.vb: System.IO.Stream.ReadAtLeastAsync(System.Memory(Of Byte), Integer, Boolean, System.Threading.CancellationToken)
  name.vb: ReadAtLeastAsync(Memory(Of Byte), Integer, Boolean, CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.ReadAtLeastAsync(System.Memory{System.Byte},System.Int32,System.Boolean,System.Threading.CancellationToken)
    name: ReadAtLeastAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readatleastasync
  - name: (
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: System.IO.Stream.ReadAtLeastAsync(System.Memory{System.Byte},System.Int32,System.Boolean,System.Threading.CancellationToken)
    name: ReadAtLeastAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readatleastasync
  - name: (
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.IO.Stream.ReadExactly(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Stream.ReadExactly(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.readexactly#system-io-stream-readexactly(system-byte()-system-int32-system-int32)
  name: ReadExactly(byte[], int, int)
  nameWithType: Stream.ReadExactly(byte[], int, int)
  fullName: System.IO.Stream.ReadExactly(byte[], int, int)
  nameWithType.vb: Stream.ReadExactly(Byte(), Integer, Integer)
  fullName.vb: System.IO.Stream.ReadExactly(Byte(), Integer, Integer)
  name.vb: ReadExactly(Byte(), Integer, Integer)
  spec.csharp:
  - uid: System.IO.Stream.ReadExactly(System.Byte[],System.Int32,System.Int32)
    name: ReadExactly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readexactly#system-io-stream-readexactly(system-byte()-system-int32-system-int32)
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.IO.Stream.ReadExactly(System.Byte[],System.Int32,System.Int32)
    name: ReadExactly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readexactly#system-io-stream-readexactly(system-byte()-system-int32-system-int32)
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.IO.Stream.ReadExactly(System.Span{System.Byte})
  commentId: M:System.IO.Stream.ReadExactly(System.Span{System.Byte})
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.readexactly#system-io-stream-readexactly(system-span((system-byte)))
  name: ReadExactly(Span<byte>)
  nameWithType: Stream.ReadExactly(Span<byte>)
  fullName: System.IO.Stream.ReadExactly(System.Span<byte>)
  nameWithType.vb: Stream.ReadExactly(Span(Of Byte))
  fullName.vb: System.IO.Stream.ReadExactly(System.Span(Of Byte))
  name.vb: ReadExactly(Span(Of Byte))
  spec.csharp:
  - uid: System.IO.Stream.ReadExactly(System.Span{System.Byte})
    name: ReadExactly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readexactly#system-io-stream-readexactly(system-span((system-byte)))
  - name: (
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.IO.Stream.ReadExactly(System.Span{System.Byte})
    name: ReadExactly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readexactly#system-io-stream-readexactly(system-span((system-byte)))
  - name: (
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: System.IO.Stream.ReadExactlyAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.Stream.ReadExactlyAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.readexactlyasync#system-io-stream-readexactlyasync(system-byte()-system-int32-system-int32-system-threading-cancellationtoken)
  name: ReadExactlyAsync(byte[], int, int, CancellationToken)
  nameWithType: Stream.ReadExactlyAsync(byte[], int, int, CancellationToken)
  fullName: System.IO.Stream.ReadExactlyAsync(byte[], int, int, System.Threading.CancellationToken)
  nameWithType.vb: Stream.ReadExactlyAsync(Byte(), Integer, Integer, CancellationToken)
  fullName.vb: System.IO.Stream.ReadExactlyAsync(Byte(), Integer, Integer, System.Threading.CancellationToken)
  name.vb: ReadExactlyAsync(Byte(), Integer, Integer, CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.ReadExactlyAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadExactlyAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readexactlyasync#system-io-stream-readexactlyasync(system-byte()-system-int32-system-int32-system-threading-cancellationtoken)
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: System.IO.Stream.ReadExactlyAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadExactlyAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readexactlyasync#system-io-stream-readexactlyasync(system-byte()-system-int32-system-int32-system-threading-cancellationtoken)
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.IO.Stream.ReadExactlyAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  commentId: M:System.IO.Stream.ReadExactlyAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.readexactlyasync#system-io-stream-readexactlyasync(system-memory((system-byte))-system-threading-cancellationtoken)
  name: ReadExactlyAsync(Memory<byte>, CancellationToken)
  nameWithType: Stream.ReadExactlyAsync(Memory<byte>, CancellationToken)
  fullName: System.IO.Stream.ReadExactlyAsync(System.Memory<byte>, System.Threading.CancellationToken)
  nameWithType.vb: Stream.ReadExactlyAsync(Memory(Of Byte), CancellationToken)
  fullName.vb: System.IO.Stream.ReadExactlyAsync(System.Memory(Of Byte), System.Threading.CancellationToken)
  name.vb: ReadExactlyAsync(Memory(Of Byte), CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.ReadExactlyAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
    name: ReadExactlyAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readexactlyasync#system-io-stream-readexactlyasync(system-memory((system-byte))-system-threading-cancellationtoken)
  - name: (
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: System.IO.Stream.ReadExactlyAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
    name: ReadExactlyAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readexactlyasync#system-io-stream-readexactlyasync(system-memory((system-byte))-system-threading-cancellationtoken)
  - name: (
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.IO.Stream.Synchronized(System.IO.Stream)
  commentId: M:System.IO.Stream.Synchronized(System.IO.Stream)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.synchronized
  name: Synchronized(Stream)
  nameWithType: Stream.Synchronized(Stream)
  fullName: System.IO.Stream.Synchronized(System.IO.Stream)
  spec.csharp:
  - uid: System.IO.Stream.Synchronized(System.IO.Stream)
    name: Synchronized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.synchronized
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
  spec.vb:
  - uid: System.IO.Stream.Synchronized(System.IO.Stream)
    name: Synchronized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.synchronized
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.writeasync#system-io-stream-writeasync(system-byte()-system-int32-system-int32)
  name: WriteAsync(byte[], int, int)
  nameWithType: Stream.WriteAsync(byte[], int, int)
  fullName: System.IO.Stream.WriteAsync(byte[], int, int)
  nameWithType.vb: Stream.WriteAsync(Byte(), Integer, Integer)
  fullName.vb: System.IO.Stream.WriteAsync(Byte(), Integer, Integer)
  name.vb: WriteAsync(Byte(), Integer, Integer)
  spec.csharp:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
    name: WriteAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.writeasync#system-io-stream-writeasync(system-byte()-system-int32-system-int32)
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)
    name: WriteAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.writeasync#system-io-stream-writeasync(system-byte()-system-int32-system-int32)
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  - name: (
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  - name: (
  - name: )
- uid: System.MarshalByRefObject.InitializeLifetimeService
  commentId: M:System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  - name: (
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.LiveStreamingServerNet.Utilities.Extensions.LockExtensions.Lock(System.Action)
  commentId: M:LiveStreamingServerNet.Utilities.Extensions.LockExtensions.Lock(System.Object,System.Action)
  parent: LiveStreamingServerNet.Utilities.Extensions.LockExtensions
  definition: LiveStreamingServerNet.Utilities.Extensions.LockExtensions.Lock(System.Object,System.Action)
  href: LiveStreamingServerNet.Utilities.Extensions.LockExtensions.html#LiveStreamingServerNet_Utilities_Extensions_LockExtensions_Lock_System_Object_System_Action_
  name: Lock(object, Action)
  nameWithType: LockExtensions.Lock(object, Action)
  fullName: LiveStreamingServerNet.Utilities.Extensions.LockExtensions.Lock(object, System.Action)
  nameWithType.vb: LockExtensions.Lock(Object, Action)
  fullName.vb: LiveStreamingServerNet.Utilities.Extensions.LockExtensions.Lock(Object, System.Action)
  name.vb: Lock(Object, Action)
  spec.csharp:
  - uid: LiveStreamingServerNet.Utilities.Extensions.LockExtensions.Lock(System.Object,System.Action)
    name: Lock
    href: LiveStreamingServerNet.Utilities.Extensions.LockExtensions.html#LiveStreamingServerNet_Utilities_Extensions_LockExtensions_Lock_System_Object_System_Action_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: LiveStreamingServerNet.Utilities.Extensions.LockExtensions.Lock(System.Object,System.Action)
    name: Lock
    href: LiveStreamingServerNet.Utilities.Extensions.LockExtensions.html#LiveStreamingServerNet_Utilities_Extensions_LockExtensions_Lock_System_Object_System_Action_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: LiveStreamingServerNet.Utilities.Extensions.LockExtensions.Lock(System.Object,System.Action)
  commentId: M:LiveStreamingServerNet.Utilities.Extensions.LockExtensions.Lock(System.Object,System.Action)
  isExternal: true
  href: LiveStreamingServerNet.Utilities.Extensions.LockExtensions.html#LiveStreamingServerNet_Utilities_Extensions_LockExtensions_Lock_System_Object_System_Action_
  name: Lock(object, Action)
  nameWithType: LockExtensions.Lock(object, Action)
  fullName: LiveStreamingServerNet.Utilities.Extensions.LockExtensions.Lock(object, System.Action)
  nameWithType.vb: LockExtensions.Lock(Object, Action)
  fullName.vb: LiveStreamingServerNet.Utilities.Extensions.LockExtensions.Lock(Object, System.Action)
  name.vb: Lock(Object, Action)
  spec.csharp:
  - uid: LiveStreamingServerNet.Utilities.Extensions.LockExtensions.Lock(System.Object,System.Action)
    name: Lock
    href: LiveStreamingServerNet.Utilities.Extensions.LockExtensions.html#LiveStreamingServerNet_Utilities_Extensions_LockExtensions_Lock_System_Object_System_Action_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
  spec.vb:
  - uid: LiveStreamingServerNet.Utilities.Extensions.LockExtensions.Lock(System.Object,System.Action)
    name: Lock
    href: LiveStreamingServerNet.Utilities.Extensions.LockExtensions.html#LiveStreamingServerNet_Utilities_Extensions_LockExtensions_Lock_System_Object_System_Action_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Action
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action
  - name: )
- uid: LiveStreamingServerNet.Utilities.Extensions.LockExtensions
  commentId: T:LiveStreamingServerNet.Utilities.Extensions.LockExtensions
  parent: LiveStreamingServerNet.Utilities.Extensions
  href: LiveStreamingServerNet.Utilities.Extensions.LockExtensions.html
  name: LockExtensions
  nameWithType: LockExtensions
  fullName: LiveStreamingServerNet.Utilities.Extensions.LockExtensions
- uid: LiveStreamingServerNet.Utilities.Extensions
  commentId: N:LiveStreamingServerNet.Utilities.Extensions
  href: LiveStreamingServerNet.html
  name: LiveStreamingServerNet.Utilities.Extensions
  nameWithType: LiveStreamingServerNet.Utilities.Extensions
  fullName: LiveStreamingServerNet.Utilities.Extensions
  spec.csharp:
  - uid: LiveStreamingServerNet
    name: LiveStreamingServerNet
    href: LiveStreamingServerNet.html
  - name: .
  - uid: LiveStreamingServerNet.Utilities
    name: Utilities
    href: LiveStreamingServerNet.Utilities.html
  - name: .
  - uid: LiveStreamingServerNet.Utilities.Extensions
    name: Extensions
    href: LiveStreamingServerNet.Utilities.Extensions.html
  spec.vb:
  - uid: LiveStreamingServerNet
    name: LiveStreamingServerNet
    href: LiveStreamingServerNet.html
  - name: .
  - uid: LiveStreamingServerNet.Utilities
    name: Utilities
    href: LiveStreamingServerNet.Utilities.html
  - name: .
  - uid: LiveStreamingServerNet.Utilities.Extensions
    name: Extensions
    href: LiveStreamingServerNet.Utilities.Extensions.html
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.#ctor*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.#ctor
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream__ctor_System_IO_Stream_
  name: ReadOnlyStream
  nameWithType: ReadOnlyStream.ReadOnlyStream
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadOnlyStream
  nameWithType.vb: ReadOnlyStream.New
  fullName.vb: LiveStreamingServerNet.Networking.ReadOnlyStream.New
  name.vb: New
- uid: System.IO.Stream.CanWrite
  commentId: P:System.IO.Stream.CanWrite
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.canwrite
  name: CanWrite
  nameWithType: Stream.CanWrite
  fullName: System.IO.Stream.CanWrite
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.CanWrite*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.CanWrite
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_CanWrite
  name: CanWrite
  nameWithType: ReadOnlyStream.CanWrite
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.CanWrite
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IO.Stream.CanRead
  commentId: P:System.IO.Stream.CanRead
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.canread
  name: CanRead
  nameWithType: Stream.CanRead
  fullName: System.IO.Stream.CanRead
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.CanRead*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.CanRead
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_CanRead
  name: CanRead
  nameWithType: ReadOnlyStream.CanRead
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.CanRead
- uid: System.IO.Stream.CanSeek
  commentId: P:System.IO.Stream.CanSeek
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.canseek
  name: CanSeek
  nameWithType: Stream.CanSeek
  fullName: System.IO.Stream.CanSeek
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.CanSeek*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.CanSeek
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_CanSeek
  name: CanSeek
  nameWithType: ReadOnlyStream.CanSeek
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.CanSeek
- uid: System.IO.Stream.CanTimeout
  commentId: P:System.IO.Stream.CanTimeout
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.cantimeout
  name: CanTimeout
  nameWithType: Stream.CanTimeout
  fullName: System.IO.Stream.CanTimeout
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.CanTimeout*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.CanTimeout
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_CanTimeout
  name: CanTimeout
  nameWithType: ReadOnlyStream.CanTimeout
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.CanTimeout
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.notsupportedexception
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.ObjectDisposedException
  commentId: T:System.ObjectDisposedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.objectdisposedexception
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.IO.Stream.Length
  commentId: P:System.IO.Stream.Length
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.length
  name: Length
  nameWithType: Stream.Length
  fullName: System.IO.Stream.Length
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.Length*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.Length
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_Length
  name: Length
  nameWithType: ReadOnlyStream.Length
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.Length
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.IO.IOException
  commentId: T:System.IO.IOException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.ioexception
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: System.IO.Stream.Position
  commentId: P:System.IO.Stream.Position
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.position
  name: Position
  nameWithType: Stream.Position
  fullName: System.IO.Stream.Position
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.Position*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.Position
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_Position
  name: Position
  nameWithType: ReadOnlyStream.Position
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.Position
- uid: System.IO.Stream.ReadTimeout
  commentId: P:System.IO.Stream.ReadTimeout
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.readtimeout
  name: ReadTimeout
  nameWithType: Stream.ReadTimeout
  fullName: System.IO.Stream.ReadTimeout
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadTimeout*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.ReadTimeout
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_ReadTimeout
  name: ReadTimeout
  nameWithType: ReadOnlyStream.ReadTimeout
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadTimeout
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.IO.Stream.WriteTimeout
  commentId: P:System.IO.Stream.WriteTimeout
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.writetimeout
  name: WriteTimeout
  nameWithType: Stream.WriteTimeout
  fullName: System.IO.Stream.WriteTimeout
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteTimeout*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.WriteTimeout
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_WriteTimeout
  name: WriteTimeout
  nameWithType: ReadOnlyStream.WriteTimeout
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteTimeout
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iasyncresult
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.beginread
  name: BeginRead(byte[], int, int, AsyncCallback, object)
  nameWithType: Stream.BeginRead(byte[], int, int, AsyncCallback, object)
  fullName: System.IO.Stream.BeginRead(byte[], int, int, System.AsyncCallback, object)
  nameWithType.vb: Stream.BeginRead(Byte(), Integer, Integer, AsyncCallback, Object)
  fullName.vb: System.IO.Stream.BeginRead(Byte(), Integer, Integer, System.AsyncCallback, Object)
  name.vb: BeginRead(Byte(), Integer, Integer, AsyncCallback, Object)
  spec.csharp:
  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.beginread
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.AsyncCallback
    name: AsyncCallback
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.asynccallback
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginRead
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.beginread
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.AsyncCallback
    name: AsyncCallback
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.asynccallback
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.BeginRead*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.BeginRead
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_BeginRead_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_
  name: BeginRead
  nameWithType: ReadOnlyStream.BeginRead
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.BeginRead
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.asynccallback
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  commentId: M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.beginwrite
  name: BeginWrite(byte[], int, int, AsyncCallback, object)
  nameWithType: Stream.BeginWrite(byte[], int, int, AsyncCallback, object)
  fullName: System.IO.Stream.BeginWrite(byte[], int, int, System.AsyncCallback, object)
  nameWithType.vb: Stream.BeginWrite(Byte(), Integer, Integer, AsyncCallback, Object)
  fullName.vb: System.IO.Stream.BeginWrite(Byte(), Integer, Integer, System.AsyncCallback, Object)
  name.vb: BeginWrite(Byte(), Integer, Integer, AsyncCallback, Object)
  spec.csharp:
  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginWrite
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.beginwrite
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.AsyncCallback
    name: AsyncCallback
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.asynccallback
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
    name: BeginWrite
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.beginwrite
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.AsyncCallback
    name: AsyncCallback
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.asynccallback
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.BeginWrite*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.BeginWrite
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_BeginWrite_System_Byte___System_Int32_System_Int32_System_AsyncCallback_System_Object_
  name: BeginWrite
  nameWithType: ReadOnlyStream.BeginWrite
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.BeginWrite
- uid: System.IO.Stream.Close
  commentId: M:System.IO.Stream.Close
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.close
  name: Close()
  nameWithType: Stream.Close()
  fullName: System.IO.Stream.Close()
  spec.csharp:
  - uid: System.IO.Stream.Close
    name: Close
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.close
  - name: (
  - name: )
  spec.vb:
  - uid: System.IO.Stream.Close
    name: Close
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.close
  - name: (
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.Close*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.Close
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_Close
  name: Close
  nameWithType: ReadOnlyStream.Close
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.Close
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  commentId: M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.copyto#system-io-stream-copyto(system-io-stream-system-int32)
  name: CopyTo(Stream, int)
  nameWithType: Stream.CopyTo(Stream, int)
  fullName: System.IO.Stream.CopyTo(System.IO.Stream, int)
  nameWithType.vb: Stream.CopyTo(Stream, Integer)
  fullName.vb: System.IO.Stream.CopyTo(System.IO.Stream, Integer)
  name.vb: CopyTo(Stream, Integer)
  spec.csharp:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.copyto#system-io-stream-copyto(system-io-stream-system-int32)
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.copyto#system-io-stream-copyto(system-io-stream-system-int32)
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.CopyTo*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.CopyTo
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_CopyTo_System_IO_Stream_System_Int32_
  name: CopyTo
  nameWithType: ReadOnlyStream.CopyTo
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.CopyTo
- uid: System.Threading.CancellationToken.None
  commentId: P:System.Threading.CancellationToken.None
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken.none
  name: None
  nameWithType: CancellationToken.None
  fullName: System.Threading.CancellationToken.None
- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.copytoasync#system-io-stream-copytoasync(system-io-stream-system-int32-system-threading-cancellationtoken)
  name: CopyToAsync(Stream, int, CancellationToken)
  nameWithType: Stream.CopyToAsync(Stream, int, CancellationToken)
  fullName: System.IO.Stream.CopyToAsync(System.IO.Stream, int, System.Threading.CancellationToken)
  nameWithType.vb: Stream.CopyToAsync(Stream, Integer, CancellationToken)
  fullName.vb: System.IO.Stream.CopyToAsync(System.IO.Stream, Integer, System.Threading.CancellationToken)
  name.vb: CopyToAsync(Stream, Integer, CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
    name: CopyToAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.copytoasync#system-io-stream-copytoasync(system-io-stream-system-int32-system-threading-cancellationtoken)
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)
    name: CopyToAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.copytoasync#system-io-stream-copytoasync(system-io-stream-system-int32-system-threading-cancellationtoken)
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.CopyToAsync*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.CopyToAsync
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_CopyToAsync_System_IO_Stream_System_Int32_System_Threading_CancellationToken_
  name: CopyToAsync
  nameWithType: ReadOnlyStream.CopyToAsync
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.CopyToAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.IO.Stream.DisposeAsync
  commentId: M:System.IO.Stream.DisposeAsync
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.disposeasync
  name: DisposeAsync()
  nameWithType: Stream.DisposeAsync()
  fullName: System.IO.Stream.DisposeAsync()
  spec.csharp:
  - uid: System.IO.Stream.DisposeAsync
    name: DisposeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.disposeasync
  - name: (
  - name: )
  spec.vb:
  - uid: System.IO.Stream.DisposeAsync
    name: DisposeAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.disposeasync
  - name: (
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.DisposeAsync*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.DisposeAsync
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_DisposeAsync
  name: DisposeAsync
  nameWithType: ReadOnlyStream.DisposeAsync
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.DisposeAsync
- uid: System.Threading.Tasks.ValueTask
  commentId: T:System.Threading.Tasks.ValueTask
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask
  name: ValueTask
  nameWithType: ValueTask
  fullName: System.Threading.Tasks.ValueTask
- uid: System.IO.Stream.EndRead(System.IAsyncResult)
  commentId: M:System.IO.Stream.EndRead(System.IAsyncResult)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.endread
  name: EndRead(IAsyncResult)
  nameWithType: Stream.EndRead(IAsyncResult)
  fullName: System.IO.Stream.EndRead(System.IAsyncResult)
  spec.csharp:
  - uid: System.IO.Stream.EndRead(System.IAsyncResult)
    name: EndRead
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.endread
  - name: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iasyncresult
  - name: )
  spec.vb:
  - uid: System.IO.Stream.EndRead(System.IAsyncResult)
    name: EndRead
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.endread
  - name: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iasyncresult
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.EndRead*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.EndRead
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_EndRead_System_IAsyncResult_
  name: EndRead
  nameWithType: ReadOnlyStream.EndRead
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.EndRead
- uid: System.IO.Stream.EndWrite(System.IAsyncResult)
  commentId: M:System.IO.Stream.EndWrite(System.IAsyncResult)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.endwrite
  name: EndWrite(IAsyncResult)
  nameWithType: Stream.EndWrite(IAsyncResult)
  fullName: System.IO.Stream.EndWrite(System.IAsyncResult)
  spec.csharp:
  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)
    name: EndWrite
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.endwrite
  - name: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iasyncresult
  - name: )
  spec.vb:
  - uid: System.IO.Stream.EndWrite(System.IAsyncResult)
    name: EndWrite
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.endwrite
  - name: (
  - uid: System.IAsyncResult
    name: IAsyncResult
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iasyncresult
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.EndWrite*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.EndWrite
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_EndWrite_System_IAsyncResult_
  name: EndWrite
  nameWithType: ReadOnlyStream.EndWrite
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.EndWrite
- uid: System.IO.Stream.Flush
  commentId: M:System.IO.Stream.Flush
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.flush
  name: Flush()
  nameWithType: Stream.Flush()
  fullName: System.IO.Stream.Flush()
  spec.csharp:
  - uid: System.IO.Stream.Flush
    name: Flush
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.flush
  - name: (
  - name: )
  spec.vb:
  - uid: System.IO.Stream.Flush
    name: Flush
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.flush
  - name: (
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.Flush*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.Flush
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_Flush
  name: Flush
  nameWithType: ReadOnlyStream.Flush
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.Flush
- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  commentId: M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.flushasync#system-io-stream-flushasync(system-threading-cancellationtoken)
  name: FlushAsync(CancellationToken)
  nameWithType: Stream.FlushAsync(CancellationToken)
  fullName: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
    name: FlushAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.flushasync#system-io-stream-flushasync(system-threading-cancellationtoken)
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)
    name: FlushAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.flushasync#system-io-stream-flushasync(system-threading-cancellationtoken)
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.FlushAsync*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.FlushAsync
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_FlushAsync_System_Threading_CancellationToken_
  name: FlushAsync
  nameWithType: ReadOnlyStream.FlushAsync
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.FlushAsync
- uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.read#system-io-stream-read(system-byte()-system-int32-system-int32)
  name: Read(byte[], int, int)
  nameWithType: Stream.Read(byte[], int, int)
  fullName: System.IO.Stream.Read(byte[], int, int)
  nameWithType.vb: Stream.Read(Byte(), Integer, Integer)
  fullName.vb: System.IO.Stream.Read(Byte(), Integer, Integer)
  name.vb: Read(Byte(), Integer, Integer)
  spec.csharp:
  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.read#system-io-stream-read(system-byte()-system-int32-system-int32)
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)
    name: Read
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.read#system-io-stream-read(system-byte()-system-int32-system-int32)
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.Read*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.Read
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_Read_System_Byte___System_Int32_System_Int32_
  name: Read
  nameWithType: ReadOnlyStream.Read
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.Read
- uid: System.IO.Stream.Read(System.Span{System.Byte})
  commentId: M:System.IO.Stream.Read(System.Span{System.Byte})
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.read#system-io-stream-read(system-span((system-byte)))
  name: Read(Span<byte>)
  nameWithType: Stream.Read(Span<byte>)
  fullName: System.IO.Stream.Read(System.Span<byte>)
  nameWithType.vb: Stream.Read(Span(Of Byte))
  fullName.vb: System.IO.Stream.Read(System.Span(Of Byte))
  name.vb: Read(Span(Of Byte))
  spec.csharp:
  - uid: System.IO.Stream.Read(System.Span{System.Byte})
    name: Read
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.read#system-io-stream-read(system-span((system-byte)))
  - name: (
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.IO.Stream.Read(System.Span{System.Byte})
    name: Read
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.read#system-io-stream-read(system-span((system-byte)))
  - name: (
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: System.Span{System.Byte}
  commentId: T:System.Span{System.Byte}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<byte>
  nameWithType: Span<byte>
  fullName: System.Span<byte>
  nameWithType.vb: Span(Of Byte)
  fullName.vb: System.Span(Of Byte)
  name.vb: Span(Of Byte)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.readasync#system-io-stream-readasync(system-byte()-system-int32-system-int32-system-threading-cancellationtoken)
  name: ReadAsync(byte[], int, int, CancellationToken)
  nameWithType: Stream.ReadAsync(byte[], int, int, CancellationToken)
  fullName: System.IO.Stream.ReadAsync(byte[], int, int, System.Threading.CancellationToken)
  nameWithType.vb: Stream.ReadAsync(Byte(), Integer, Integer, CancellationToken)
  fullName.vb: System.IO.Stream.ReadAsync(Byte(), Integer, Integer, System.Threading.CancellationToken)
  name.vb: ReadAsync(Byte(), Integer, Integer, CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readasync#system-io-stream-readasync(system-byte()-system-int32-system-int32-system-threading-cancellationtoken)
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readasync#system-io-stream-readasync(system-byte()-system-int32-system-int32-system-threading-cancellationtoken)
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadAsync*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.ReadAsync
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_ReadAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_
  name: ReadAsync
  nameWithType: ReadOnlyStream.ReadAsync
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks.ValueTask`1.Result
  commentId: P:System.Threading.Tasks.ValueTask`1.Result
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1.result
  name: Result
  nameWithType: ValueTask<TResult>.Result
  fullName: System.Threading.Tasks.ValueTask<TResult>.Result
  nameWithType.vb: ValueTask(Of TResult).Result
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult).Result
- uid: System.IO.Stream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  commentId: M:System.IO.Stream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.readasync#system-io-stream-readasync(system-memory((system-byte))-system-threading-cancellationtoken)
  name: ReadAsync(Memory<byte>, CancellationToken)
  nameWithType: Stream.ReadAsync(Memory<byte>, CancellationToken)
  fullName: System.IO.Stream.ReadAsync(System.Memory<byte>, System.Threading.CancellationToken)
  nameWithType.vb: Stream.ReadAsync(Memory(Of Byte), CancellationToken)
  fullName.vb: System.IO.Stream.ReadAsync(System.Memory(Of Byte), System.Threading.CancellationToken)
  name.vb: ReadAsync(Memory(Of Byte), CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
    name: ReadAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readasync#system-io-stream-readasync(system-memory((system-byte))-system-threading-cancellationtoken)
  - name: (
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: System.IO.Stream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)
    name: ReadAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readasync#system-io-stream-readasync(system-memory((system-byte))-system-threading-cancellationtoken)
  - name: (
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Memory{System.Byte}
  commentId: T:System.Memory{System.Byte}
  parent: System
  definition: System.Memory`1
  href: https://learn.microsoft.com/dotnet/api/system.memory-1
  name: Memory<byte>
  nameWithType: Memory<byte>
  fullName: System.Memory<byte>
  nameWithType.vb: Memory(Of Byte)
  fullName.vb: System.Memory(Of Byte)
  name.vb: Memory(Of Byte)
  spec.csharp:
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Threading.Tasks.ValueTask{System.Int32}
  commentId: T:System.Threading.Tasks.ValueTask{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.ValueTask`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<int>
  nameWithType: ValueTask<int>
  fullName: System.Threading.Tasks.ValueTask<int>
  nameWithType.vb: ValueTask(Of Integer)
  fullName.vb: System.Threading.Tasks.ValueTask(Of Integer)
  name.vb: ValueTask(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Memory`1
  commentId: T:System.Memory`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.memory-1
  name: Memory<T>
  nameWithType: Memory<T>
  fullName: System.Memory<T>
  nameWithType.vb: Memory(Of T)
  fullName.vb: System.Memory(Of T)
  name.vb: Memory(Of T)
  spec.csharp:
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.ValueTask`1
  commentId: T:System.Threading.Tasks.ValueTask`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  name: ValueTask<TResult>
  nameWithType: ValueTask<TResult>
  fullName: System.Threading.Tasks.ValueTask<TResult>
  nameWithType.vb: ValueTask(Of TResult)
  fullName.vb: System.Threading.Tasks.ValueTask(Of TResult)
  name.vb: ValueTask(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.ValueTask`1
    name: ValueTask
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.valuetask-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.IO.Stream.ReadByte
  commentId: M:System.IO.Stream.ReadByte
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.readbyte
  name: ReadByte()
  nameWithType: Stream.ReadByte()
  fullName: System.IO.Stream.ReadByte()
  spec.csharp:
  - uid: System.IO.Stream.ReadByte
    name: ReadByte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readbyte
  - name: (
  - name: )
  spec.vb:
  - uid: System.IO.Stream.ReadByte
    name: ReadByte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.readbyte
  - name: (
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadByte*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.ReadByte
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_ReadByte
  name: ReadByte
  nameWithType: ReadOnlyStream.ReadByte
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.ReadByte
- uid: System.IO.SeekOrigin
  commentId: T:System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.seekorigin
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  commentId: M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.seek
  name: Seek(long, SeekOrigin)
  nameWithType: Stream.Seek(long, SeekOrigin)
  fullName: System.IO.Stream.Seek(long, System.IO.SeekOrigin)
  nameWithType.vb: Stream.Seek(Long, SeekOrigin)
  fullName.vb: System.IO.Stream.Seek(Long, System.IO.SeekOrigin)
  name.vb: Seek(Long, SeekOrigin)
  spec.csharp:
  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.seek
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.seekorigin
  - name: )
  spec.vb:
  - uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)
    name: Seek
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.seek
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.seekorigin
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.Seek*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.Seek
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_Seek_System_Int64_System_IO_SeekOrigin_
  name: Seek
  nameWithType: ReadOnlyStream.Seek
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.Seek
- uid: System.IO.Stream.SetLength(System.Int64)
  commentId: M:System.IO.Stream.SetLength(System.Int64)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.setlength
  name: SetLength(long)
  nameWithType: Stream.SetLength(long)
  fullName: System.IO.Stream.SetLength(long)
  nameWithType.vb: Stream.SetLength(Long)
  fullName.vb: System.IO.Stream.SetLength(Long)
  name.vb: SetLength(Long)
  spec.csharp:
  - uid: System.IO.Stream.SetLength(System.Int64)
    name: SetLength
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.setlength
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: System.IO.Stream.SetLength(System.Int64)
    name: SetLength
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.setlength
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.SetLength*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.SetLength
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_SetLength_System_Int64_
  name: SetLength
  nameWithType: ReadOnlyStream.SetLength
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.SetLength
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.ToString*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.ToString
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_ToString
  name: ToString
  nameWithType: ReadOnlyStream.ToString
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.write#system-io-stream-write(system-byte()-system-int32-system-int32)
  name: Write(byte[], int, int)
  nameWithType: Stream.Write(byte[], int, int)
  fullName: System.IO.Stream.Write(byte[], int, int)
  nameWithType.vb: Stream.Write(Byte(), Integer, Integer)
  fullName.vb: System.IO.Stream.Write(Byte(), Integer, Integer)
  name.vb: Write(Byte(), Integer, Integer)
  spec.csharp:
  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.write#system-io-stream-write(system-byte()-system-int32-system-int32)
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.write#system-io-stream-write(system-byte()-system-int32-system-int32)
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.Write*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.Write
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_Write_System_Byte___System_Int32_System_Int32_
  name: Write
  nameWithType: ReadOnlyStream.Write
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.Write
- uid: System.IO.Stream.Write(System.ReadOnlySpan{System.Byte})
  commentId: M:System.IO.Stream.Write(System.ReadOnlySpan{System.Byte})
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.write#system-io-stream-write(system-readonlyspan((system-byte)))
  name: Write(ReadOnlySpan<byte>)
  nameWithType: Stream.Write(ReadOnlySpan<byte>)
  fullName: System.IO.Stream.Write(System.ReadOnlySpan<byte>)
  nameWithType.vb: Stream.Write(ReadOnlySpan(Of Byte))
  fullName.vb: System.IO.Stream.Write(System.ReadOnlySpan(Of Byte))
  name.vb: Write(ReadOnlySpan(Of Byte))
  spec.csharp:
  - uid: System.IO.Stream.Write(System.ReadOnlySpan{System.Byte})
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.write#system-io-stream-write(system-readonlyspan((system-byte)))
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.IO.Stream.Write(System.ReadOnlySpan{System.Byte})
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.write#system-io-stream-write(system-readonlyspan((system-byte)))
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: System.ReadOnlySpan{System.Byte}
  commentId: T:System.ReadOnlySpan{System.Byte}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<byte>
  nameWithType: ReadOnlySpan<byte>
  fullName: System.ReadOnlySpan<byte>
  nameWithType.vb: ReadOnlySpan(Of Byte)
  fullName.vb: System.ReadOnlySpan(Of Byte)
  name.vb: ReadOnlySpan(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.writeasync#system-io-stream-writeasync(system-byte()-system-int32-system-int32-system-threading-cancellationtoken)
  name: WriteAsync(byte[], int, int, CancellationToken)
  nameWithType: Stream.WriteAsync(byte[], int, int, CancellationToken)
  fullName: System.IO.Stream.WriteAsync(byte[], int, int, System.Threading.CancellationToken)
  nameWithType.vb: Stream.WriteAsync(Byte(), Integer, Integer, CancellationToken)
  fullName.vb: System.IO.Stream.WriteAsync(Byte(), Integer, Integer, System.Threading.CancellationToken)
  name.vb: WriteAsync(Byte(), Integer, Integer, CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.writeasync#system-io-stream-writeasync(system-byte()-system-int32-system-int32-system-threading-cancellationtoken)
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.writeasync#system-io-stream-writeasync(system-byte()-system-int32-system-int32-system-threading-cancellationtoken)
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteAsync*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.WriteAsync
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_WriteAsync_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_
  name: WriteAsync
  nameWithType: ReadOnlyStream.WriteAsync
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteAsync
- uid: System.IO.Stream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  commentId: M:System.IO.Stream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.writeasync#system-io-stream-writeasync(system-readonlymemory((system-byte))-system-threading-cancellationtoken)
  name: WriteAsync(ReadOnlyMemory<byte>, CancellationToken)
  nameWithType: Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken)
  fullName: System.IO.Stream.WriteAsync(System.ReadOnlyMemory<byte>, System.Threading.CancellationToken)
  nameWithType.vb: Stream.WriteAsync(ReadOnlyMemory(Of Byte), CancellationToken)
  fullName.vb: System.IO.Stream.WriteAsync(System.ReadOnlyMemory(Of Byte), System.Threading.CancellationToken)
  name.vb: WriteAsync(ReadOnlyMemory(Of Byte), CancellationToken)
  spec.csharp:
  - uid: System.IO.Stream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
    name: WriteAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.writeasync#system-io-stream-writeasync(system-readonlymemory((system-byte))-system-threading-cancellationtoken)
  - name: (
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: System.IO.Stream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)
    name: WriteAsync
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.writeasync#system-io-stream-writeasync(system-readonlymemory((system-byte))-system-threading-cancellationtoken)
  - name: (
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.ReadOnlyMemory{System.Byte}
  commentId: T:System.ReadOnlyMemory{System.Byte}
  parent: System
  definition: System.ReadOnlyMemory`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<byte>
  nameWithType: ReadOnlyMemory<byte>
  fullName: System.ReadOnlyMemory<byte>
  nameWithType.vb: ReadOnlyMemory(Of Byte)
  fullName.vb: System.ReadOnlyMemory(Of Byte)
  name.vb: ReadOnlyMemory(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.ReadOnlyMemory`1
  commentId: T:System.ReadOnlyMemory`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<T>
  nameWithType: ReadOnlyMemory<T>
  fullName: System.ReadOnlyMemory<T>
  nameWithType.vb: ReadOnlyMemory(Of T)
  fullName.vb: System.ReadOnlyMemory(Of T)
  name.vb: ReadOnlyMemory(Of T)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IO.Stream.WriteByte(System.Byte)
  commentId: M:System.IO.Stream.WriteByte(System.Byte)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.writebyte
  name: WriteByte(byte)
  nameWithType: Stream.WriteByte(byte)
  fullName: System.IO.Stream.WriteByte(byte)
  nameWithType.vb: Stream.WriteByte(Byte)
  fullName.vb: System.IO.Stream.WriteByte(Byte)
  name.vb: WriteByte(Byte)
  spec.csharp:
  - uid: System.IO.Stream.WriteByte(System.Byte)
    name: WriteByte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.writebyte
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  spec.vb:
  - uid: System.IO.Stream.WriteByte(System.Byte)
    name: WriteByte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.writebyte
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteByte*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.WriteByte
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_WriteByte_System_Byte_
  name: WriteByte
  nameWithType: ReadOnlyStream.WriteByte
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.WriteByte
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: System.IO.Stream.Dispose(System.Boolean)
  commentId: M:System.IO.Stream.Dispose(System.Boolean)
  parent: System.IO.Stream
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream.dispose#system-io-stream-dispose(system-boolean)
  name: Dispose(bool)
  nameWithType: Stream.Dispose(bool)
  fullName: System.IO.Stream.Dispose(bool)
  nameWithType.vb: Stream.Dispose(Boolean)
  fullName.vb: System.IO.Stream.Dispose(Boolean)
  name.vb: Dispose(Boolean)
  spec.csharp:
  - uid: System.IO.Stream.Dispose(System.Boolean)
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.dispose#system-io-stream-dispose(system-boolean)
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: System.IO.Stream.Dispose(System.Boolean)
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream.dispose#system-io-stream-dispose(system-boolean)
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: LiveStreamingServerNet.Networking.ReadOnlyStream.Dispose*
  commentId: Overload:LiveStreamingServerNet.Networking.ReadOnlyStream.Dispose
  href: LiveStreamingServerNet.Networking.ReadOnlyStream.html#LiveStreamingServerNet_Networking_ReadOnlyStream_Dispose_System_Boolean_
  name: Dispose
  nameWithType: ReadOnlyStream.Dispose
  fullName: LiveStreamingServerNet.Networking.ReadOnlyStream.Dispose
